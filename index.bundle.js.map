{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/check-whether-to-format-file.js","webpack:///./lib/maybe-find-local-prettier-instance.js","webpack:///./lib/maybe-format.js","webpack:///./lib/simple-prettier-atom.js","webpack:///external \"atom\"","webpack:///external \"fs\"","webpack:///external \"import-from\"","webpack:///external \"path\"","webpack:///external \"pify\"","webpack:///external \"pkg-up\"","webpack:///external \"semver\""],"names":["setOfUnsupportedParsers","Set","checkWhetherToFormatFile","filepath","prettier","resolveConfigFile","then","configFilepath","ignorePath","getPrettierIgnorePath","Promise","all","getFileInfo","result","fileInfo","ignored","inferredParser","has","configDir","path","dirname","join","minimumSupportedPrettierVersion","maybeFindLocalPrettierInstance","resolve","pkgUp","packageJsonFilepath","readFile","undefined","packageJsonContent","json","tryParseJson","dependencies","devDependencies","packageJsonDir","importFrom","semver","gte","version","_unused_error","pify","fs","string","JSON","parse","e","maybeFormat","editor","atom","workspace","getActiveTextEditor","buffer","getBuffer","position","getCursorBufferPosition","cursorOffset","characterIndexForPosition","getPath","shouldFormatFile","resolveConfig","config","formatResult","formatWithCursor","getText","Object","assign","_unused_formattingError","formatted","updatedCursorOffset","setText","newPosition","positionForCharacterIndex","setCursorBufferPosition","catch","error","console","setOfBuffers","activate","disposables","commands","add","observeTextEditors","disposable","onWillSave","onDidDestroy","dispose","delete","deactivate"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/simple-prettier-atom.js\");\n","//---------//\n// Imports //\n//---------//\n\nimport path from 'path'\n\n//\n//------//\n// Init //\n//------//\n\nconst setOfUnsupportedParsers = new Set(['vue'])\n\n//\n//------//\n// Main //\n//------//\n\nconst checkWhetherToFormatFile = (filepath, prettier) => {\n  return prettier.resolveConfigFile(filepath)\n    .then(configFilepath => {\n      if (!configFilepath) return\n\n      const ignorePath = getPrettierIgnorePath(configFilepath)\n      return Promise.all([\n        configFilepath,\n        prettier.getFileInfo(filepath, { ignorePath })\n      ])\n    })\n    .then(result => {\n      if (!result) return false\n\n      const [configFilepath, fileInfo] = result\n      return !!(\n        configFilepath &&\n        !fileInfo.ignored &&\n        fileInfo.inferredParser &&\n        !setOfUnsupportedParsers.has(fileInfo.inferredParser)\n      )\n    })\n}\n\nfunction getPrettierIgnorePath(configFilepath) {\n  const configDir = path.dirname(configFilepath)\n  return path.join(configDir, '.prettierignore')\n}\n\n//\n//---------//\n// Exports //\n//---------//\n\nexport default checkWhetherToFormatFile\n","//---------//\n// Imports //\n//---------//\n\nimport fs from 'fs'\nimport importFrom from 'import-from'\nimport path from 'path'\nimport pify from 'pify'\nimport pkgUp from 'pkg-up'\nimport semver from 'semver'\n\n//\n//------//\n// Init //\n//------//\n\nconst minimumSupportedPrettierVersion = '1.13.0'\n\n//\n//------//\n// Main //\n//------//\n\nconst maybeFindLocalPrettierInstance = filepath => {\n  if (!filepath) return Promise.resolve()\n\n  return pkgUp(path.dirname(filepath))\n    .then(packageJsonFilepath => {\n      return packageJsonFilepath\n        ? Promise.all([readFile(packageJsonFilepath), packageJsonFilepath])\n        : undefined\n    })\n    .then(result => {\n      if (!result) return\n\n      const [packageJsonContent, packageJsonFilepath] = result,\n        json = tryParseJson(packageJsonContent)\n\n      if (!json) return\n      const {\n        dependencies = {},\n        devDependencies = {},\n      } = json\n\n      if (!(dependencies.prettier || devDependencies.prettier)) return\n\n      const packageJsonDir = path.dirname(packageJsonFilepath)\n\n      try {\n        const prettier = importFrom(packageJsonDir, 'prettier')\n\n        return (semver.gte(prettier.version, minimumSupportedPrettierVersion))\n          ? prettier\n          : undefined\n      }\n      catch(_unused_error) {\n        return\n      }\n    })\n}\n\n//\n//------------------//\n// Helper Functions //\n//------------------//\n\nfunction readFile(filepath) {\n  return pify(fs.readFile)(filepath, 'utf8')\n}\n\nfunction tryParseJson(string) {\n  try {\n    return JSON.parse(string);\n  } catch (e) {\n    return false;\n  }\n}\n\n//\n//---------//\n// Exports //\n//---------//\n\nexport default maybeFindLocalPrettierInstance\n","//---------//\n// Imports //\n//---------//\n\nimport checkWhetherToFormatFile from './check-whether-to-format-file'\nimport dedentMacro from 'dedent/macro'\nimport maybeFindLocalPrettierInstance from './maybe-find-local-prettier-instance'\n\n//\n//------//\n// Main //\n//------//\n\nconst maybeFormat = () => {\n  const editor = atom.workspace.getActiveTextEditor(),\n    buffer = editor.getBuffer(),\n    position = editor.getCursorBufferPosition(),\n    cursorOffset = buffer.characterIndexForPosition(position),\n    filepath = buffer.getPath()\n\n  return maybeFindLocalPrettierInstance(filepath)\n    .then(prettier => {\n      if (!prettier) return\n\n      return Promise.all([\n        checkWhetherToFormatFile(filepath, prettier),\n        prettier\n      ])\n    })\n    .then(result => {\n      if (!result) return\n\n      const [shouldFormatFile, prettier] = result\n      if (!shouldFormatFile) return\n\n      return Promise.all([\n        prettier.resolveConfig(filepath),\n        prettier,\n      ])\n    })\n    .then(result => {\n      if (!result) return\n\n      const [config, prettier] = result\n\n      let formatResult\n\n      try {\n        formatResult = prettier.formatWithCursor(\n          buffer.getText(),\n          Object.assign(config, {\n            cursorOffset,\n            filepath,\n          })\n        )\n      }\n      // TODO: add option to log formatting errors to console\n      catch(_unused_formattingError) {\n        // if we can't format the code then there ain't nothin else to do!\n        return\n      }\n\n      const { formatted, cursorOffset: updatedCursorOffset } = formatResult\n\n      buffer.setText(formatted)\n      const newPosition = buffer.positionForCharacterIndex(updatedCursorOffset)\n      editor.setCursorBufferPosition(newPosition)\n    })\n    .catch(error => {\n      /* eslint-disable no-console */\n      console.error(\n        dedentMacro(`\n          The following unexpected error occurred in 'simple-prettier-atom'\n\n          If this package is up to date, please file an issue in the github repo\n            with the error contents so I can make sure to handle it\n            appropriately.\n\n          Sorry for the hassle and I appreciate your patience\n        `)\n      )\n\n      console.error(error)\n      /* eslint-enable no-console */\n    })\n}\n\n//\n//---------//\n// Exports //\n//---------//\n\nexport default maybeFormat\n","//---------//\n// Imports //\n//---------//\n\nimport { CompositeDisposable } from 'atom'\n\nimport maybeFormat from './maybe-format'\n\n//\n//------//\n// Init //\n//------//\n\nconst setOfBuffers = new Set()\n\n//\n//------//\n// Main //\n//------//\n\nexport default {\n  activate() {\n\n    this.disposables = new CompositeDisposable(\n      atom.commands.add('atom-workspace', {\n        'simple-prettier-atom:format': maybeFormat,\n      }),\n\n      atom.workspace.observeTextEditors(editor => {\n        const buffer = editor.getBuffer()\n\n        if (setOfBuffers.has(buffer)) return\n\n        setOfBuffers.add(buffer)\n        const disposable = buffer.onWillSave(maybeFormat)\n        buffer.onDidDestroy(() => {\n          disposable.dispose()\n          setOfBuffers.delete(buffer)\n        })\n      })\n    )\n\n  },\n\n  deactivate() {\n    this.disposables.dispose()\n  },\n}\n","module.exports = require(\"atom\");","module.exports = require(\"fs\");","module.exports = require(\"import-from\");","module.exports = require(\"path\");","module.exports = require(\"pify\");","module.exports = require(\"pkg-up\");","module.exports = require(\"semver\");"],"sourceRoot":""}