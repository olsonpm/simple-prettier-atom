{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/maybe-format.js","webpack:///./lib/simple-prettier-atom.js","webpack:///external \"atom\"","webpack:///external \"path\"","webpack:///external \"prettier\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAsC,aAAa;AACnD;AACA,GAAG;AACH;AACA;;AAEA,WAAW,+CAA+C;AAC1D;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AChEA;AACA;AACA;;AAE8B;;AAE9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AC7BA,iC;;;;;;;;;;;;ACAA,iC;;;;;;;;;;;;ACAA,qC","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/simple-prettier-atom.js\");\n","//---------//\n// Imports //\n//---------//\n\nimport path from 'path'\nimport prettier from 'prettier'\n\n//\n//------//\n// Main //\n//------//\n\nconst maybeFormat = () => {\n  const editor = atom.workspace.getActiveTextEditor(),\n    buffer = editor.getBuffer(),\n    position = editor.getCursorBufferPosition(),\n    cursorOffset = buffer.characterIndexForPosition(position),\n    filepath = buffer.getPath()\n\n  return Promise.all([\n    prettier.resolveConfig(filepath),\n    prettier.resolveConfigFile(filepath),\n  ]).then(([config, configFilepath]) => {\n    if (!configFilepath) return [config]\n\n    const ignorePath = getPrettierIgnorePath(configFilepath)\n    return Promise.all([\n      config,\n      configFilepath,\n      prettier.getFileInfo(filepath, { ignorePath })\n    ])\n  })\n  .then(([config, configFilepath, fileInfo]) => {\n    if (!configFilepath || fileInfo.ignored || !fileInfo.inferredParser) return\n\n    const { formatted, cursorOffset: updatedCursorOffset } = prettier.formatWithCursor(\n      buffer.getText(),\n      Object.assign(config, {\n        cursorOffset,\n        filepath,\n      })\n    )\n\n    buffer.setText(formatted)\n    const newPosition = buffer.positionForCharacterIndex(updatedCursorOffset)\n    editor.setCursorBufferPosition(newPosition)\n  })\n}\n\n//\n//------------------//\n// Helper Functions //\n//------------------//\n\nfunction getPrettierIgnorePath(configFilepath) {\n  const configDir = path.dirname(configFilepath)\n  return path.join(configDir, '.prettierignore')\n}\n\n//\n//---------//\n// Exports //\n//---------//\n\nexport default maybeFormat\n","//---------//\n// Imports //\n//---------//\n\nimport { CompositeDisposable } from 'atom'\n\nimport maybeFormat from './maybe-format'\n\n//\n//------//\n// Main //\n//------//\n\nexport default {\n  activate() {\n    const buffer = atom.workspace.getActiveTextEditor().getBuffer()\n\n    this.disposables = new CompositeDisposable(\n      atom.commands.add('atom-workspace', {\n        'simple-prettier-atom:format': maybeFormat,\n      }),\n\n      buffer.onWillSave(maybeFormat)\n    )\n  },\n\n  deactivate() {\n    this.disposables.dispose()\n  },\n}\n","module.exports = require(\"atom\");","module.exports = require(\"path\");","module.exports = require(\"prettier\");"],"sourceRoot":""}